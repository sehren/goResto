{"version":3,"file":"super-tab-button.js","sourceRoot":"","sources":["../../src/components/super-tab-button.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,uBAAuB,EAAE,iBAAiB,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;IAiD7H,wBACU,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;wBAzBL,KAAK;sBAkBc,IAAI,YAAY,EAAkB;KAQrE;IANJ,gCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB;IAMD,yCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;KAC/B;;gBArDF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,mSAKT;oBACD,IAAI,EAAE;wBACJ,kBAAkB,EAAE,UAAU;wBAC9B,SAAS,EAAE,WAAW;wBACtB,oBAAoB,EAAE,kBAAkB;wBACxC,mBAAmB,EAAE,kBAAkB;wBACvC,wBAAwB,EAAE,mBAAmB;wBAC7C,UAAU,EAAE,EAAE;wBACd,MAAM,EAAE,QAAQ;qBACjB;oBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;;gBArB4F,UAAU;;;6BAwBpG,KAAK;0BAGL,KAAK;yBAGL,KAAK;0BAGL,KAAK;+BAGL,KAAK;0BAGL,KAAK;2BAGL,MAAM;;yBA1CT;;SAsBa,cAAc","sourcesContent":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'super-tab-button',\r\n  template: `\r\n    <ion-icon *ngIf=\"!!icon\" [name]=\"icon\" [color]=\"color\"></ion-icon>\r\n    <span class=\"title\" *ngIf=\"!!title\" ion-text [color]=\"color\">{{ title }}</span>\r\n    <ion-badge mode=\"md\" [color]=\"badgeColor\">{{ badge }}</ion-badge>\r\n    <div class=\"button-effect\"></div>\r\n  `,\r\n  host: {\r\n    '[class.selected]': 'selected',\r\n    '(click)': 'onClick()',\r\n    '[class.title-only]': '!!title && !icon',\r\n    '[class.icon-only]': '!title && !!icon',\r\n    '[class.title-and-icon]': '!!title && !!icon',\r\n    'tappable': '',\r\n    'role': 'button'\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SuperTabButton {\r\n\r\n  @Input()\r\n  selected: boolean = false;\r\n\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input()\r\n  icon: string;\r\n\r\n  @Input()\r\n  badge: number;\r\n\r\n  @Input()\r\n  badgeColor: string;\r\n\r\n  @Input()\r\n  color: string;\r\n\r\n  @Output()\r\n  select: EventEmitter<SuperTabButton> = new EventEmitter<SuperTabButton>();\r\n\r\n  onClick() {\r\n    this.select.emit(this);\r\n  }\r\n\r\n  constructor(\r\n    private _el: ElementRef\r\n  ) {}\r\n\r\n  getNativeElement(): HTMLElement {\r\n    return this._el.nativeElement;\r\n  }\r\n\r\n}\r\n"]}